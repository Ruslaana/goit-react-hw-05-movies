{"version":3,"file":"static/js/884.37e566f8.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../services/movieApi';\nimport Loader from 'components/Loader/Loader';\n\n// const Cast = lazy(() => import('../components/Cast/Cast'));\n// const Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref}>Go back</Link>\n      {movie && (\n        <>\n          <h1>{movie.title}</h1>\n          <img alt={movie.title} src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}></img>\n          <p>Release date: {movie.release_date}</p>\n          <p>{movie.overview}</p>\n\n        </>\n      )}\n\n      <Link to={\"cast\"}>Cast</Link>\n      <Link to={\"reviews\"}>Reviews</Link>\n\n      <Suspense fallback={ <Loader /> }>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/trending/all/day`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, options);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","getMovieDetails","movieDetails","to","title","alt","src","poster_path","release_date","overview","Suspense","fallback","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","response","data","results","console","error","getTrendingMovies","api_key","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}