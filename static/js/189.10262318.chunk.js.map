{"version":3,"file":"static/js/189.10262318.chunk.js","mappings":"6NAqCA,UAhCA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBJ,GAFjB,OAEhBK,EAFgB,OAGtBN,EAAWM,EAASC,SAHE,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBL,GACD,GAAE,CAACH,KAGF,4BACE,wBAAI,aACJ,wBACGF,EAAQW,KAAI,SAACC,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOG,GADL,QASpB,C,+LCjCKC,EAAU,mCACVC,EAAW,+BACXC,EAAQ,sNAEP,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACCC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,iBACHO,OAAQ,CAAEC,MAAOL,GACjBM,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAPxB,kBAYoBW,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,iBAAsCI,GAZ1D,cAYGd,EAZH,yBAaIA,EAASuB,KAAKtB,SAblB,uCAeHC,QAAQsB,MAAM,iCAAd,MAfG,kBAgBI,IAhBJ,gFAqBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCX,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,qBACHO,OAAQ,CAAES,QAASjB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,qBAA0CI,GAR9D,cAQGd,EARH,yBASIA,EAASuB,KAAKtB,SATlB,uCAWHC,QAAQsB,MAAM,iCAAd,MAXG,kBAYI,IAZJ,gFAgBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,gFACCmB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBf,GAC1BsB,OAAQ,CAAES,QAASjB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bf,GAAWmB,GAR9D,cAQGd,EARH,yBASIA,EAASuB,MATb,uCAWHrB,QAAQsB,MAAM,+BAAd,MAXG,kBAYI,MAZJ,gFAgBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,gFACCmB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBf,EAAvB,YACHsB,OAAQ,CAAES,QAASjB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bf,EAA/B,YAAkDmB,GARtE,cAQGd,EARH,yBASIA,EAASuB,KAAKM,MATlB,uCAWH3B,QAAQsB,MAAM,+BAAd,MAXG,kBAYI,IAZJ,gFAgBA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,gFACCmB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBf,EAAvB,YACHsB,OAAQ,CAAES,QAASjB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bf,EAA/B,YAAkDmB,GARtE,cAQGd,EARH,yBASIA,EAASuB,KAAKtB,SATlB,uCAWHC,QAAQsB,MAAM,+BAAd,MAXG,kBAYI,IAZJ,gF","sources":["components/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../services/movieApi';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/trending/all/day`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, options);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","response","results","console","log","map","review","content","author","id","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","data","error","getTrendingMovies","api_key","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}