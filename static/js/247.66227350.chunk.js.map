{"version":3,"file":"static/js/247.66227350.chunk.js","mappings":"gNA+BA,UA5BA,YAA0B,IAAVA,EAAS,EAATA,MACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBN,EAAMO,OAAOC,SAF9B,OAEhBC,EAFgB,OAGtBN,EAAQM,EAASP,MAHK,gDAKtBQ,QAAQC,IAAR,MALsB,yDAAH,qDASvBN,GACD,GAAE,CAACL,EAAMO,OAAOC,WAGf,4BACE,wBAAI,UACJ,wBACGN,EAAKU,KAAI,SAACC,GAAD,OACR,wBAAoBA,EAAMC,MAAjBD,EAAME,GADP,QAMjB,C,+LC3BKC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnEV,OAAQ,CACNc,QAASL,EACTM,MAAOH,KALR,cAEGV,EAFH,yBAQIA,EAASc,KAAKC,SARlB,uCAUHd,QAAQe,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEV,OAAQ,CACNc,QAASL,KAJV,cAEGP,EAFH,yBAOIA,EAASc,KAAKC,SAPlB,uCASHd,QAAQe,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCnB,GAAhC,gGAEoBY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEV,OAAQ,CACNc,QAASL,EACTY,SAAUpB,KALX,cAEGC,EAFH,yBAQIA,EAASc,MARb,uCAUHb,QAAQe,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCE,GAAhC,gGAEoBY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEV,OAAQ,CACNc,QAASL,EACTY,SAAUpB,KALX,cAEGC,EAFH,yBAQIA,EAASc,KAAKrB,MARlB,uCAUHQ,QAAQe,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCrB,GAAhC,gGAEoBY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEV,OAAQ,CACNc,QAASL,EACTY,SAAUpB,KALX,cAEGC,EAFH,yBAQIA,EAASe,SARb,uCAUHd,QAAQe,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF","sources":["components/Cast/Cast.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/movieApi';\n\nfunction Cast({ match }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await getMovieCredits(match.params.movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [match.params.movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n"],"names":["match","useState","cast","setCast","useEffect","fetchMovieCredits","getMovieCredits","params","movieId","response","console","log","map","actor","name","id","API_KEY","BASE_URL","searchMovies","searchTerm","axios","api_key","query","data","results","error","getTrendingMovies","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}