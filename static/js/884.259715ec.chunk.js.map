{"version":3,"file":"static/js/884.259715ec.chunk.js","mappings":"yNASMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAuErB,UArEqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KA+BA,OA3BAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAEA,IAAMM,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBP,GADnB,OAClBQ,EADkB,OAExBJ,EAASI,GAFe,2CAAH,qDAevBF,GAjBoB,CAoBrB,GAAE,CAACN,KAOF,2BACGG,IACC,gCACG,KACD,wBAAKA,EAAMM,SACX,uBAAIN,EAAMO,eAId,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACf,EAAD,OAC5B,SAAC,KAAD,CAAOc,KAAK,UAAUC,SAAS,SAACb,EAAD,WAsBtC,C,+LC7EKc,EAAU,mCACVC,EAAW,+BAGV,SAASC,EAAaC,GAC7B,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAL,iBACHM,OAAQ,CAACC,MAAOL,GAChBM,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OATH,yNAaZC,EAAAA,EAAAA,QACSR,GACRS,MAAK,SAAUC,GACd,OAAOA,EAASC,KAAKC,OACtB,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,GACF,CAEM,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBR,EAAAA,EAAAA,IAAA,UAAaX,EAAb,qBAA0C,CAC/DM,OAAQ,CACNc,QAASrB,KAJV,cAEGc,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHG,QAAQD,MAAM,iCAAd,MATG,kBAUI,IAVJ,gFAcA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bd,GAAW,CAC/DoB,OAAQ,CACNc,QAASrB,KAJV,cAEGc,EAFH,yBAOIA,EAASC,MAPb,uCASHI,QAAQD,MAAM,+BAAd,MATG,kBAUI,MAVJ,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bd,EAA/B,YAAkD,CACvEoB,OAAQ,CACNc,QAASrB,KAJV,cAEGc,EAFH,yBAOIA,EAASC,KAAKQ,MAPlB,uCASHJ,QAAQD,MAAM,+BAAd,MATG,kBAUI,IAVJ,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrC,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bd,EAA/B,YAAkD,CACvEoB,OAAQ,CACNc,QAASrB,KAJV,cAEGc,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHG,QAAQD,MAAM,+BAAd,MATG,kBAUI,IAVJ,gF","sources":["pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { lazy, useEffect, useState } from 'react';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  // getMovieCredits,\n  // getMovieReviews,\n} from '../services/movieApi';\n// import CastItem from '../components/CastItem/CastItem';\n\nconst Cast = lazy(() => import('../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  // const [cast, setCast] = useState([]);\n  // const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    // const fetchMovieCast = async () => {\n    //   const movieCast = await getMovieCredits(movieId);\n    //   setCast(movieCast);\n    // };\n\n    // const fetchMovieReviews = async () => {\n    //   const movieReviews = await getMovieReviews(movieId);\n    //   setReviews(movieReviews);\n    // };\n\n    fetchMovieDetails();\n    // fetchMovieCast();\n    // fetchMovieReviews();\n  }, [movieId]);\n\n  // if (!movie) {\n  //   return null;\n  // }\n\n  return (\n    <div>\n      {movie && (\n        <>\n          {' '}\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n        </>\n      )}\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n      {/* <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <CastItem actor={actor} />\n          </li>\n        ))}\n      </ul>\n\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport function searchMovies(searchTerm) {\nconst options = {\n  method: 'GET',\n  url: `${BASE_URL}/search/movie`,\n  params: {query: searchTerm},\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${TOKEN}`,\n  }\n};\n\n  axios\n  .request(options)\n  .then(function (response) {\n    return response.data.results;\n  })\n  .catch(function (error) {\n    console.error(error);\n  });\n}\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieDetails","getMovieDetails","movieDetails","title","overview","path","element","API_KEY","BASE_URL","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","then","response","data","results","catch","error","console","getTrendingMovies","api_key","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}