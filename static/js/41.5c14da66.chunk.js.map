{"version":3,"file":"static/js/41.5c14da66.chunk.js","mappings":"oPAmBA,MAhBA,YAA+B,IAAVA,EAAS,EAATA,MACnB,OACE,4BACE,wBAAKA,EAAMC,QACX,yBAAG,cAAYD,EAAME,eAG1B,ECoDD,EA1DqB,SAAC,GAAe,IAC3BC,EAD0B,EAAZC,MACIC,OAAlBF,QACR,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBZ,GADnB,OAClBa,EADkB,OAExBR,EAASQ,GAFe,2CAAH,qDAKjBC,EAAc,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBf,GADnB,OACfgB,EADe,OAErBT,EAAQS,GAFa,2CAAH,qDAKdC,EAAiB,mCAAG,qGACGC,EAAAA,EAAAA,IAAgBlB,GADnB,OAClBmB,EADkB,OAExBV,EAAWU,GAFa,2CAAH,qDAKvBR,IACAG,IACAG,GACD,GAAE,CAACjB,IAECI,GAKH,4BACE,wBAAKA,EAAMgB,SACX,uBAAIhB,EAAMiB,YAEV,wBAAI,UACJ,wBACGf,EAAKgB,KAAI,SAACzB,GAAD,OACR,yBACE,SAAC,EAAD,CAAUA,MAAOA,KADVA,EAAM0B,GADP,OAOZ,wBAAI,aACJ,wBACGf,EAAQc,KAAI,SAACE,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOD,GADL,SAnBV,IA4BV,C,+LC1DKI,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnE1B,OAAQ,CACN8B,QAASL,EACTM,MAAOH,KALR,cAEGI,EAFH,yBAQIA,EAASC,KAAKC,SARlB,uCAUHC,QAAQC,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpE1B,OAAQ,CACN8B,QAASL,KAJV,cAEGO,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHC,QAAQC,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCZ,GAAhC,gGAEoB+B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvE1B,OAAQ,CACN8B,QAASL,EACTa,SAAUxC,KALX,cAEGkC,EAFH,yBAQIA,EAASC,MARb,uCAUHE,QAAQC,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCf,GAAhC,gGAEoB+B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvE1B,OAAQ,CACN8B,QAASL,EACTa,SAAUxC,KALX,cAEGkC,EAFH,yBAQIA,EAASC,KAAK7B,MARlB,uCAUH+B,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAgClB,GAAhC,gGAEoB+B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvE1B,OAAQ,CACN8B,QAASL,EACTa,SAAUxC,KALX,cAEGkC,EAFH,yBAQIA,EAASE,SARb,uCAUHC,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF","sources":["components/CastItem/CastItem.jsx","pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CastItem ({ actor }) {\n  return (\n    <div>\n      <h4>{actor.name}</h4>\n      <p>Character: {actor.character}</p>\n    </div>\n  );\n}\n\nCastItem.propTypes = {\n  actor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default CastItem;","import React, { useEffect, useState } from 'react';\nimport { getMovieDetails, getMovieCredits, getMovieReviews } from '../services/movieApi';\nimport CastItem from '../components/CastItem/CastItem';\n\nconst MovieDetails = ({ match }) => {\n  const { movieId } = match.params;\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    const fetchMovieCast = async () => {\n      const movieCast = await getMovieCredits(movieId);\n      setCast(movieCast);\n    };\n\n    const fetchMovieReviews = async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews);\n    };\n\n    fetchMovieDetails();\n    fetchMovieCast();\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n\n      <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <CastItem actor={actor} />\n          </li>\n        ))}\n      </ul>\n\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n"],"names":["actor","name","character","movieId","match","params","useState","movie","setMovie","cast","setCast","reviews","setReviews","useEffect","fetchMovieDetails","getMovieDetails","movieDetails","fetchMovieCast","getMovieCredits","movieCast","fetchMovieReviews","getMovieReviews","movieReviews","title","overview","map","id","review","content","author","API_KEY","BASE_URL","searchMovies","searchTerm","axios","api_key","query","response","data","results","console","error","getTrendingMovies","movie_id"],"sourceRoot":""}