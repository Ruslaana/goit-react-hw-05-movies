{"version":3,"file":"static/js/186.b439192a.chunk.js","mappings":"gNAkCA,UA/BA,YAA6B,IAAVA,EAAS,EAATA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBN,EAAMO,OAAOC,SAF9B,OAEhBC,EAFgB,OAGtBN,EAAWM,EAASC,SAHE,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBP,GACD,GAAE,CAACL,EAAMO,OAAOC,WAGf,4BACE,wBAAI,aACJ,wBACGN,EAAQW,KAAI,SAACC,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOG,GADL,QASpB,C,+LC9BKC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnEZ,OAAQ,CACNgB,QAASL,EACTM,MAAOH,KALR,cAEGZ,EAFH,yBAQIA,EAASgB,KAAKf,SARlB,uCAUHC,QAAQe,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEZ,OAAQ,CACNgB,QAASL,KAJV,cAEGT,EAFH,yBAOIA,EAASgB,KAAKf,SAPlB,uCASHC,QAAQe,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCpB,GAAhC,gGAEoBc,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEZ,OAAQ,CACNgB,QAASL,EACTW,SAAUrB,KALX,cAEGC,EAFH,yBAQIA,EAASgB,MARb,uCAUHd,QAAQe,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCtB,GAAhC,gGAEoBc,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEZ,OAAQ,CACNgB,QAASL,EACTW,SAAUrB,KALX,cAEGC,EAFH,yBAQIA,EAASgB,KAAKM,MARlB,uCAUHpB,QAAQe,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCE,GAAhC,gGAEoBc,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEZ,OAAQ,CACNgB,QAASL,EACTW,SAAUrB,KALX,cAEGC,EAFH,yBAQIA,EAASC,SARb,uCAUHC,QAAQe,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF","sources":["components/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../services/movieApi';\n\nfunction Reviews({ match }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(match.params.movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [match.params.movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n"],"names":["match","useState","reviews","setReviews","useEffect","fetchMovieReviews","getMovieReviews","params","movieId","response","results","console","log","map","review","content","author","id","API_KEY","BASE_URL","searchMovies","searchTerm","axios","api_key","query","data","error","getTrendingMovies","getMovieDetails","movie_id","getMovieCredits","cast"],"sourceRoot":""}