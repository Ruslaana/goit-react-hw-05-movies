{"version":3,"file":"static/js/168.9b9babe3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Reviews_header__+M-zW\",\"paragraph\":\"Reviews_paragraph__pgqZ-\",\"item\":\"Reviews_item__DJKij\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../services/movieApi';\n\nimport styles from './Reviews.module.css'\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n      {!reviews?.length > 0 && <div>No Reviews</div>}\n        {reviews?.length > 0 && reviews.map((review) => (\n          <li key={review.id}>\n            <h3 className={styles.header} >Author: {review.author}</h3>\n            <p className={styles.paragraph} >{review.content} </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/trending/all/day`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, options);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","response","console","log","length","map","review","className","styles","author","content","id","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","data","results","error","getTrendingMovies","api_key","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}