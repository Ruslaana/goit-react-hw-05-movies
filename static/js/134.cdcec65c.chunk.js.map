{"version":3,"file":"static/js/134.cdcec65c.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnEI,OAAQ,CACNC,QAASN,EACTO,MAAOJ,KALR,cAEGK,EAFH,yBAQIA,EAASC,KAAKC,SARlB,uCAUHC,QAAQC,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEI,OAAQ,CACNC,QAASN,KAJV,cAEGQ,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHC,QAAQC,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,MARb,uCAUHE,QAAQC,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,KAAKS,MARlB,uCAUHP,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASE,SARb,uCAUHC,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF,0CC7CP,IAhBA,YAA8B,IAATQ,EAAQ,EAARA,MACnB,OACE,4BACE,wBAAKA,EAAMC,SACX,yCAAiBD,EAAME,kBAG5B,C,gGCkCD,UAvCe,SAAC,GAAgE,IAA9DnB,EAA6D,EAA7DA,WAAYoB,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACnDC,EAAW,mCAAG,qGACIxB,EAAAA,EAAAA,IAAaC,GADjB,OACZO,EADY,OAElBc,EAAad,GAFK,2CAAH,qDAKjB,OACE,4BACE,kBACEiB,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,MAA9B,KAEZ,mBAAQI,QAASN,EAAjB,qBAEA,wBACGH,EAAcU,KAAI,SAACb,GAAD,OACjB,yBACE,SAAC,IAAD,CAAWA,MAAOA,KADXA,EAAMc,GADE,QAQ1B,C","sources":["api/movieApi.jsx","components/MovieItem.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MovieItem ({movie}) {\n  return (\n    <div>\n      <h3>{movie.title}</h3>\n      <p>Release Date:{movie.release_data}</p>\n    </div>\n  );\n}\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_data: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { searchMovies } from '../api/movieApi';\nimport MovieItem from '../components/MovieItem';\n\nconst Movies = ({ searchTerm, searchResults, handleSearch, setSearchTerm }) => {\n  const handleClick = async () => {\n    const results = await searchMovies(searchTerm);\n    handleSearch(results);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleClick}>Search</button>\n\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <MovieItem movie={movie} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  searchTerm: PropTypes.string.isRequired,\n  searchResults: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setSearchTerm: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","searchMovies","searchTerm","axios","params","api_key","query","response","data","results","console","error","getTrendingMovies","getMovieDetails","movieId","movie_id","getMovieCredits","cast","getMovieReviews","movie","title","release_data","searchResults","handleSearch","setSearchTerm","handleClick","type","value","onChange","e","target","onClick","map","id"],"sourceRoot":""}