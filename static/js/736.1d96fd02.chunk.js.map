{"version":3,"file":"static/js/736.1d96fd02.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnEI,OAAQ,CACNC,QAASN,EACTO,MAAOJ,KALR,cAEGK,EAFH,yBAQIA,EAASC,KAAKC,SARlB,uCAUHC,QAAQC,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEI,OAAQ,CACNC,QAASN,KAJV,cAEGQ,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHC,QAAQC,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,MARb,uCAUHE,QAAQC,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,KAAKS,MARlB,uCAUHP,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASE,SARb,uCAUHC,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF,gGC9BP,UA/BA,YAA6B,IAAVQ,EAAS,EAATA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECN,EAAAA,EAAAA,IAAgBC,EAAMf,OAAOU,SAF9B,OAEhBP,EAFgB,OAGtBe,EAAWf,EAASE,SAHE,gDAKtBC,QAAQe,IAAR,MALsB,yDAAH,qDASvBD,GACD,GAAE,CAACL,EAAMf,OAAOU,WAGf,4BACE,wBAAI,aACJ,wBACGO,EAAQK,KAAI,SAACC,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOG,GADL,QASpB,C","sources":["api/movieApi.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../api/movieApi';\n\nfunction Reviews({ match }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(match.params.movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [match.params.movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","searchMovies","searchTerm","axios","params","api_key","query","response","data","results","console","error","getTrendingMovies","getMovieDetails","movieId","movie_id","getMovieCredits","cast","getMovieReviews","match","useState","reviews","setReviews","useEffect","fetchMovieReviews","log","map","review","content","author","id"],"sourceRoot":""}