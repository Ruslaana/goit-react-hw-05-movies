{"version":3,"file":"static/js/41.57f704fa.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,yBAA8C,CACnEI,OAAQ,CACNC,QAASN,EACTO,MAAOJ,KALR,cAEGK,EAFH,yBAQIA,EAASC,KAAKC,SARlB,uCAUHC,QAAQC,MAAM,0BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,0BAA+C,CACpEI,OAAQ,CACNC,QAASN,KAJV,cAEGQ,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,uCASHC,QAAQC,MAAM,iCAAd,MATG,kBAUG,IAVH,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,MARb,uCAUHE,QAAQC,MAAM,+BAAd,MAVG,kBAWI,MAXJ,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASC,KAAKS,MARlB,uCAUHP,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gFAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAAkD,CACvEI,OAAQ,CACNC,QAASN,EACTgB,SAAUD,KALX,cAEGP,EAFH,yBAQIA,EAASE,SARb,uCAUHC,QAAQC,MAAM,+BAAd,MAVG,kBAWI,IAXJ,gF,qIC7CP,MAhBA,YAA+B,IAAVQ,EAAS,EAATA,MACnB,OACE,4BACE,wBAAKA,EAAMC,QACX,yBAAG,cAAYD,EAAME,eAG1B,ECoDD,EA1DqB,SAAC,GAAe,IAC3BP,EAD0B,EAAZQ,MACIlB,OAAlBU,QACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAON,EAAP,KAAaS,EAAb,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACGjB,EAAAA,EAAAA,IAAgBC,GADnB,OAClBiB,EADkB,OAExBN,EAASM,GAFe,2CAAH,qDAKjBC,EAAc,mCAAG,qGACGhB,EAAAA,EAAAA,IAAgBF,GADnB,OACfmB,EADe,OAErBP,EAAQO,GAFa,2CAAH,qDAKdC,EAAiB,mCAAG,qGACGhB,EAAAA,EAAAA,IAAgBJ,GADnB,OAClBqB,EADkB,OAExBP,EAAWO,GAFa,2CAAH,qDAKvBL,IACAE,IACAE,GACD,GAAE,CAACpB,IAECU,GAKH,4BACE,wBAAKA,EAAMY,SACX,uBAAIZ,EAAMa,YAEV,wBAAI,UACJ,wBACGpB,EAAKqB,KAAI,SAACnB,GAAD,OACR,yBACE,SAAC,EAAD,CAAUA,MAAOA,KADVA,EAAMoB,GADP,OAOZ,wBAAI,aACJ,wBACGZ,EAAQW,KAAI,SAACE,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOD,GADL,SAnBV,IA4BV,C","sources":["api/movieApi.jsx","components/CastItem/CastItem.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios'\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchTerm) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/search-movies`, {\n      params: {\n        api_key: API_KEY,\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n}\n\nexport async function getTrendingMovies () {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/get-trending`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return[];\n  }\n}\n\nexport async function getMovieDetails (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-details`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-credits`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews (movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movies/get-movie-reviews`, {\n      params: {\n        api_key: API_KEY,\n        movie_id: movieId,\n      }\n    });\n    return response.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CastItem ({ actor }) {\n  return (\n    <div>\n      <h4>{actor.name}</h4>\n      <p>Character: {actor.character}</p>\n    </div>\n  );\n}\n\nCastItem.propTypes = {\n  actor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default CastItem;","import React, { useEffect, useState } from 'react';\nimport { getMovieDetails, getMovieCredits, getMovieReviews } from '../api/movieApi';\nimport CastItem from '../components/CastItem/CastItem';\n\nconst MovieDetails = ({ match }) => {\n  const { movieId } = match.params;\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    const fetchMovieCast = async () => {\n      const movieCast = await getMovieCredits(movieId);\n      setCast(movieCast);\n    };\n\n    const fetchMovieReviews = async () => {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews);\n    };\n\n    fetchMovieDetails();\n    fetchMovieCast();\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n\n      <h2>Cast</h2>\n      <ul>\n        {cast.map((actor) => (\n          <li key={actor.id}>\n            <CastItem actor={actor} />\n          </li>\n        ))}\n      </ul>\n\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","searchMovies","searchTerm","axios","params","api_key","query","response","data","results","console","error","getTrendingMovies","getMovieDetails","movieId","movie_id","getMovieCredits","cast","getMovieReviews","actor","name","character","match","useState","movie","setMovie","setCast","reviews","setReviews","useEffect","fetchMovieDetails","movieDetails","fetchMovieCast","movieCast","fetchMovieReviews","movieReviews","title","overview","map","id","review","content","author"],"sourceRoot":""}