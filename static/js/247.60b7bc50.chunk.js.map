{"version":3,"file":"static/js/247.60b7bc50.chunk.js","mappings":"6NAmCA,UA/BA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBJ,GAFjB,OAEhBK,EAFgB,OAGtBN,EAAQM,EAASP,MAHK,gDAKtBQ,QAAQC,IAAR,MALsB,yDAAH,qDASvBJ,GAXoB,CAYrB,GAAE,CAACH,KAGF,4BACE,wBAAI,UACJ,wBACGF,EAAKU,KAAI,SAAAC,GAAK,OACb,wBAAoBA,EAAMC,MAAjBD,EAAME,GADF,QAMtB,C,+LC/BKC,EAAU,mCACVC,EAAW,+BACXC,EAAQ,sNAEP,SAAgBC,EAAvB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACCC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,iBACHO,OAAQ,CAAEC,MAAOL,GACjBM,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAPxB,kBAYoBW,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,iBAAsCI,GAZ1D,cAYGZ,EAZH,yBAaIA,EAASqB,KAAKC,SAblB,uCAeHrB,QAAQsB,MAAM,iCAAd,MAfG,kBAgBI,IAhBJ,gFAqBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBJ,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,qBAA0C,CAC/DO,OAAQ,CACNU,QAASlB,KAJV,cAEGP,EAFH,yBAOIA,EAASqB,KAAKC,SAPlB,uCASHrB,QAAQsB,MAAM,iCAAd,MATG,kBAUI,IAVJ,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bb,GAAW,CAC/DoB,OAAQ,CACNU,QAASlB,KAJV,cAEGP,EAFH,yBAOIA,EAASqB,MAPb,uCASHpB,QAAQsB,MAAM,+BAAd,MATG,kBAUI,MAVJ,gFAcA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bb,EAA/B,YAAkD,CACvEoB,OAAQ,CACNU,QAASlB,KAJV,cAEGP,EAFH,yBAOIA,EAASqB,KAAK5B,MAPlB,uCASHQ,QAAQsB,MAAM,+BAAd,MATG,kBAUI,IAVJ,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,gGAEoByB,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+Bb,EAA/B,YAAkD,CACvEoB,OAAQ,CACNU,QAASlB,KAJV,cAEGP,EAFH,yBAOIA,EAASqB,KAAKC,SAPlB,uCASHrB,QAAQsB,MAAM,+BAAd,MATG,kBAUI,IAVJ,gF","sources":["components/Cast/Cast.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/movieApi';\nimport { useParams } from 'react-router-dom';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function  searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCredits","getMovieCredits","response","console","log","map","actor","name","id","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","data","results","error","getTrendingMovies","api_key","getMovieDetails","getMovieReviews"],"sourceRoot":""}