{"version":3,"file":"static/js/247.4689d48f.chunk.js","mappings":"yNAyCA,UArCA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBJ,GAFjB,OAEhBK,EAFgB,OAGtBN,EAAQM,GAHc,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBJ,GAXoB,CAYrB,GAAE,CAACH,KAGF,4BACE,wBAAI,UACJ,4BACC,OAACF,QAAD,IAACA,GAAAA,EAAMU,QAAS,IAAK,yBAAK,aACpB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMU,QAAS,GAAKV,EAAKW,KAAI,SAAAC,GAAK,OACjC,0BAAoBA,EAAMC,MAE1B,gBAAKC,IAAKF,EAAMG,MAAOC,IAAG,yCAAoCJ,EAAMK,kBAF3DL,EAAMM,GADkB,SAW1C,C,+LCrCKC,EAAU,mCACVC,EAAW,+BACXC,EAAQ,sNAEP,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACCC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,iBACHO,OAAQ,CAAEC,MAAOL,GACjBM,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OAAYV,KAPxB,kBAYoBW,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,iBAAsCI,GAZ1D,cAYGjB,EAZH,yBAaIA,EAAS0B,KAAKC,SAblB,uCAeH1B,QAAQ2B,MAAM,iCAAd,MAfG,kBAgBI,IAhBJ,gFAqBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCZ,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,qBACHO,OAAQ,CAAEU,QAASlB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,qBAA0CI,GAR9D,cAQGjB,EARH,yBASIA,EAAS0B,KAAKC,SATlB,uCAWH1B,QAAQ2B,MAAM,iCAAd,MAXG,kBAYI,IAZJ,gFAgBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpC,GAA/B,gFACCsB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBlB,GAC1ByB,OAAQ,CAAEU,QAASlB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+BlB,GAAWsB,GAR9D,cAQGjB,EARH,yBASIA,EAAS0B,MATb,uCAWHzB,QAAQ2B,MAAM,+BAAd,MAXG,kBAYI,MAZJ,gFAgBA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,gFACCsB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBlB,EAAvB,YACHyB,OAAQ,CAAEU,QAASlB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+BlB,EAA/B,YAAkDsB,GARtE,cAQGjB,EARH,yBASIA,EAAS0B,KAAKjC,MATlB,uCAWHQ,QAAQ2B,MAAM,+BAAd,MAXG,kBAYI,IAZJ,gFAgBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrC,GAA/B,gFACCsB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKN,EAAL,kBAAuBlB,EAAvB,YACHyB,OAAQ,CAAEU,QAASlB,IAJhB,kBAQoBa,EAAAA,EAAAA,IAAA,UAAaZ,EAAb,kBAA+BlB,EAA/B,YAAkDsB,GARtE,cAQGjB,EARH,yBASIA,EAAS0B,KAAKC,SATlB,uCAWH1B,QAAQ2B,MAAM,+BAAd,MAXG,kBAYI,IAZJ,gF","sources":["components/Cast/Cast.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/movieApi';\nimport { useParams } from 'react-router-dom';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCast(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    \n    fetchMovieCredits();\n  }, [movieId]);\n  \n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul >\n      {!cast?.length > 0 && <div>No cast</div>}\n        {cast?.length > 0 && cast.map(actor => (\n          <li key={actor.id}>{actor.name}\n          {/* <p>Character: {actor.character_name}</p> */}\n          <img alt={actor.title} src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}></img>\n\n          </li>\n          \n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/trending/all/day`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, options);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCredits","getMovieCredits","response","console","log","length","map","actor","name","alt","title","src","profile_path","id","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","data","results","error","getTrendingMovies","api_key","getMovieDetails","getMovieReviews"],"sourceRoot":""}