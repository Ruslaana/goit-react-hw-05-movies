{"version":3,"file":"static/js/189.1318e99c.chunk.js","mappings":"6NAqCA,UAhCA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBJ,GAFjB,OAEhBK,EAFgB,OAGtBN,EAAWM,EAASC,SAHE,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBL,GACD,GAAE,CAACH,KAGF,4BACE,wBAAI,aACJ,wBACGF,EAAQW,KAAI,SAACC,GAAD,OACX,2BACE,uBAAIA,EAAOC,WACX,yBAAG,WAASD,EAAOE,YAFZF,EAAOG,GADL,QASpB,C,+LCjCKC,EAAU,mCACVC,EAAW,+BAGV,SAASC,EAAaC,GAC7B,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAL,iBACHM,OAAQ,CAACC,MAAOL,GAChBM,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OATH,yNAaZC,EAAAA,EAAAA,QACSR,GACRS,MAAK,SAAUtB,GACd,OAAOA,EAASuB,KAAKtB,OACtB,IACAuB,OAAM,SAAUC,GACfvB,QAAQuB,MAAMA,EACf,GACF,CAEM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBL,EAAAA,EAAAA,IAAA,UAAaX,EAAb,qBAA0C,CAC/DM,OAAQ,CACNW,QAASlB,KAJV,cAEGT,EAFH,yBAOIA,EAASuB,KAAKtB,SAPlB,uCASHC,QAAQuB,MAAM,iCAAd,MATG,kBAUI,IAVJ,gFAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,gGAEoB0B,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bf,GAAW,CAC/DqB,OAAQ,CACNW,QAASlB,KAJV,cAEGT,EAFH,yBAOIA,EAASuB,MAPb,uCASHrB,QAAQuB,MAAM,+BAAd,MATG,kBAUI,MAVJ,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,gGAEoB0B,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bf,EAA/B,YAAkD,CACvEqB,OAAQ,CACNW,QAASlB,KAJV,cAEGT,EAFH,yBAOIA,EAASuB,KAAKO,MAPlB,uCASH5B,QAAQuB,MAAM,+BAAd,MATG,kBAUI,IAVJ,gFAcA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,gGAEoB0B,EAAAA,EAAAA,IAAA,UAAaX,EAAb,kBAA+Bf,EAA/B,YAAkD,CACvEqB,OAAQ,CACNW,QAASlB,KAJV,cAEGT,EAFH,yBAOIA,EAASuB,KAAKtB,SAPlB,uCASHC,QAAQuB,MAAM,+BAAd,MATG,kBAUI,IAVJ,gF","sources":["components/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../services/movieApi';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport function searchMovies(searchTerm) {\nconst options = {\n  method: 'GET',\n  url: `${BASE_URL}/search/movie`,\n  params: {query: searchTerm},\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${TOKEN}`,\n  }\n};\n\n  axios\n  .request(options)\n  .then(function (response) {\n    return response.data.results;\n  })\n  .catch(function (error) {\n    console.error(error);\n  });\n}\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","response","results","console","log","map","review","content","author","id","API_KEY","BASE_URL","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","then","data","catch","error","getTrendingMovies","api_key","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}