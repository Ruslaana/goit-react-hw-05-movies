{"version":3,"file":"static/js/884.c61d26c8.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import React, { lazy, useEffect, useState } from 'react';\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  // getMovieCredits,\n  // getMovieReviews,\n} from '../services/movieApi';\n\nconst Cast = lazy(() => import('../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      const movieDetails = await getMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movie && (\n        <>\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <p>Release Date:{movie.release_date}</p>\n          <img alt={movie.title} src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}></img>\n\n        </>\n      )}\n\n      <Routes>\n        <Route path=\"/movies/:movieId/cast\" element={<Cast />} />\n        <Route path=\"/movies/:movieId/reviews\" element={<Reviews />} />\n      </Routes>\n\n      <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n      <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a1f5b9e9409662faaf8dea1424605128';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWY1YjllOTQwOTY2MmZhYWY4ZGVhMTQyNDYwNTEyOCIsInN1YiI6IjY0YWU2YjUwNjZhMGQzMDEzYTc0ZDQ2MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K0sogxs4DauKrsrU3S5qyHUHTsR5OwOW6huAEekTRIc'\n\nexport async function searchMovies(searchTerm) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/search/movie`,\n    params: { query: searchTerm },\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${TOKEN}`,\n    }\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, options );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n  \n}\n\nexport async function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/trending/all/day`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting trending movies:', error);\n    return [];\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, options);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details:', error);\n    return null;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/credits`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error getting movie credits:', error);\n    return [];\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL}/movie/${movieId}/reviews`,\n    params: { api_key: API_KEY },\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting movie reviews:', error);\n    return [];\n  }\n}\n"],"names":["Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieDetails","getMovieDetails","movieDetails","title","overview","release_date","alt","src","poster_path","path","element","to","API_KEY","BASE_URL","TOKEN","searchMovies","searchTerm","options","method","url","params","query","headers","accept","Authorization","axios","response","data","results","console","error","getTrendingMovies","api_key","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}